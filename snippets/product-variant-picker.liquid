{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  - update_url: {Boolean} whether or not to update url when changing variants. If false, the url isn't updated. Default: true (optional).
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{%- unless product.has_only_default_variant -%}
  <variant-selects
    id="variant-selects-{{ section.id }}"
    class="no-js-hidden"
    data-section="{{ section.id }}"
    data-url="{{ product.url }}"
    {% if update_url == false %}
      data-update-url="false"
    {% endif %}
    {{ block.shopify_attributes }}
  >
    {%- for option in product.options_with_values -%}
      {%- liquid
        assign swatch_count = option.values | map: 'swatch' | compact | size
        assign picker_type = block.settings.picker_type

        if swatch_count > 0 and block.settings.swatch_shape != 'none'
          if block.settings.picker_type == 'dropdown'
            assign picker_type = 'swatch_dropdown'
          else
            assign picker_type = 'swatch'
          endif
        endif
      -%}
      {%- if picker_type == 'swatch' -%}
        <fieldset class="js product-form__input product-form__input--swatch">
          <legend class="form__label">
            {{ option.name }}:
            <span data-selected-swatch-value="{{ option.name }}">
              {{- option.selected_value -}}
            </span>
          </legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- elsif picker_type == 'button' -%}
        <fieldset class="js product-form__input product-form__input--pill">
          <legend class="form__label">{{ option.name }}</legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- else -%}
        <div class="product-form__input product-form__input--dropdown">
          <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
            {{ option.name }}
          </label>
          <div class="select">
            {%- if picker_type == 'swatch_dropdown' -%}
              <span
                data-selected-dropdown-swatch="options[{{ option.name | escape }}]"
                class="dropdown-swatch"
              >
                {% render 'swatch', swatch: option.selected_value.swatch, shape: block.settings.swatch_shape %}
              </span>
            {%- endif -%}
            <select
              id="Option-{{ section.id }}-{{ forloop.index0 }}"
              class="select__select"
              name="options[{{ option.name | escape }}]"
              form="{{ product_form_id }}"
            >
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            </select>
            {% render 'icon-caret' %}
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}
    <script type="application/json">
      {{ product.variants | json }}
    </script>
  </variant-selects>
{%- endunless -%}

{%- if product.metafields.custom.custom_cake_message -%}
  <div class="product-form__input custom-cake-message-container">
    <label id="custom_cake_message_label" for="custom_cake_message" class="form__label">
      {{- 'products.custom_cake_info.custom_cake_message_label' | t -}}
      <span class="product-form__tooltip">
        <span class="product-form__question-mark">?</span>
        <span class="product-form__tooltiptext">{{- 'products.custom_cake_info.custom_cake_message_info' | t -}}</span>
      </span>
    </label>
    <input
      class="field product-form-text-input"
      type="text"
      id="custom_cake_message"
      name="properties[Custom Cake Message]"
      form="{{ product_form_id }}"
      maxlength="50"
    >
  </div>

  {% assign colors = block.settings.icing_color_1 
    | append: '|' 
    | append: block.settings.icing_color_2 
    | append: '|' 
    | append: block.settings.icing_color_3 
    | append: '|' 
    | append: block.settings.icing_color_4 
    | append: '|' 
    | append: block.settings.icing_color_5 
    | append: '|' 
    | append: block.settings.icing_color_6 
    | split: '|'
  %}


  {% assign color_name_1 = block.settings.icing_color_1_name | default: "!nc" %}
  {% assign color_name_2 = block.settings.icing_color_2_name | default: "!nc" %}
  {% assign color_name_3 = block.settings.icing_color_3_name | default: "!nc" %}
  {% assign color_name_4 = block.settings.icing_color_4_name | default: "!nc" %}
  {% assign color_name_5 = block.settings.icing_color_5_name | default: "!nc" %}
  {% assign color_name_6 = block.settings.icing_color_6_name | default: "!nc" %} 

  {% assign color_names = color_name_1 
    | append: '|' 
    | append: color_name_2 
    | append: '|' 
    | append: color_name_3 
    | append: '|' 
    | append: color_name_4 
    | append: '|' 
    | append: color_name_5 
    | append: '|' 
    | append: color_name_6 
    | split: '|'
  %}

  {% if block.settings.show_cake_message_swatches %}
    <fieldset id="product-form__color_picker_container" class="product-form__input cake-message-color-picker">
      <legend id="icing_color_title" class="form__label">
        {{- 'products.custom_cake_info.icing_color_label' | t -}}
      </legend>

      <div class="product-form-radio-group">

        {% for i in (0..5) %}
          {% if color_names[i] != "!nc" and colors[i] != "rgba(0,0,0,0)" %}
            <input
              class="icing_color_swatch-input__input"
              type="radio"
              id="color_{{ color_names[i] }}"
              name="properties[Message Icing Color]"
              form="{{ product_form_id }}"
              value="{{ color_names[i] }}"
            >
            <label for="color_{{ color_names[i] }}" title="{{ color_names[i] }}" class="swatch-input__label">
              <span class="icing-color-swatch" style="background-color: {{ colors[i] }}"></span>
            </label>
          {% endif %}
        {% endfor %}
      </div>
    </fieldset>
  {% endif %}
  <script>
    if ("{{ color_names }}" != "!nc!nc!nc!nc!nc!nc"
    && "{{ colors }}" != "rgba(0,0,0,0)rgba(0,0,0,0)rgba(0,0,0,0)rgba(0,0,0,0)rgba(0,0,0,0)rgba(0,0,0,0)") {    
      document.getElementById('custom_cake_message').addEventListener('input', function() {
        const colorPicker = document.getElementById('product-form__color_picker_container');
        if (this.value) {
          colorPicker.classList.add('visible');
        } else {
          colorPicker.classList.remove('visible');
          const radioInputs = colorPicker.querySelectorAll('input[type="radio"].icing_color_swatch-input__input');
          radioInputs.forEach((input) => {
            input.checked = false;
          });
        }
      });
    }
  </script>
{%- endif -%}

{%- if product.metafields.custom.omit_nuts -%}
  <fieldset class="product-form__input">
    <legend id="omit_nuts_title" class="form__label">
      {{- 'products.custom_cake_info.omit_nuts_label' | t -}}
      <span class="product-form__tooltip">
        <span class="product-form__question-mark">?</span>
        <span class="product-form__tooltiptext">{{- 'products.custom_cake_info.omit_nuts_info' | t -}}</span>
      </span>
    </legend>
    <div class="product-form-checkbox-group">
      <input
        class="product-form-checkbox"
        type="checkbox"
        id="omit_nuts"
        name="properties[Nut Preference]"
        form="{{ product_form_id }}"
        value="{{- 'products.custom_cake_info.omit_nuts_value' | t -}}"
      >
      <label for="omit_nuts" class="product-form-checkbox-label">{{- 'products.custom_cake_info.omit_nuts_value' | t -}}</label>
    </div>
  </fieldset>

{% comment %}
  The following script conditionally shows/hides the omit_nuts fieldset based on the selected flavour.
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const flavourOption = document.querySelector('[name="options[Flavour]"]');
      const omitNutsFieldset = document.getElementById('omit_nuts_title').parentElement;
    
      function handleFlavourChange() {
        if (flavourOption.value === 'Hazelnut') {
          omitNutsFieldset.style.display = 'none';
        } else {
          omitNutsFieldset.style.display = 'block';
        }
      }
    
      handleFlavourChange();
    
      flavourOption.addEventListener('change', handleFlavourChange);
    });
  </script>
{% endcomment %}

{%- endif -%}

{%- if product.metafields.custom.omit_alcohol -%}
  <fieldset class="product-form__input">
    <legend id="omit_alcohol_title" class="form__label">
      {{- 'products.custom_cake_info.omit_alcohol_label' | t -}}
      <span class="product-form__tooltip">
        <span class="product-form__question-mark">?</span>
        <span class="product-form__tooltiptext">{{- 'products.custom_cake_info.omit_alcohol_info' | t -}}</span>
      </span>
    </legend>
    <div class="product-form-checkbox-group">
      <input
        class="product-form-checkbox"
        type="checkbox"
        id="omit_alcohol"
        name="properties[Alcohol Preference]"
        form="{{ product_form_id }}"
        value="{{- 'products.custom_cake_info.omit_alcohol_value' | t -}}"
      >
      <label for="omit_alcohol" class="product-form-checkbox-label">{{- 'products.custom_cake_info.omit_alcohol_value' | t -}}</label>
    </div>
  </fieldset>
{%- endif -%}

<noscript class="product-form__noscript-wrapper-{{ section.id }}">
  <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
    <label class="form__label" for="Variants-{{ section.id }}">
      {{- 'products.product.product_variants' | t -}}
    </label>
    <div class="select">
      <select
        name="id"
        id="Variants-{{ section.id }}"
        class="select__select"
        form="{{ product_form_id }}"
      >
        {%- for variant in product.variants -%}
          <option
            {% if variant == product.selected_or_first_available_variant %}
              selected="selected"
            {% endif %}
            {% if variant.available == false %}
              disabled
            {% endif %}
            value="{{ variant.id }}"
          >
            {%- liquid
              echo variant.title
              echo variant.price | money | strip_html | prepend: ' - '
              if variant.available == false
                echo 'products.product.sold_out' | t | prepend: ' - '
              endif
              if variant.quantity_rule.increment > 1
                echo 'products.product.quantity.multiples_of' | t: quantity: variant.quantity_rule.increment | prepend: ' - '
              endif
              if variant.quantity_rule.min > 1
                echo 'products.product.quantity.minimum_of' | t: quantity: variant.quantity_rule.min | prepend: ' - '
              endif
              if variant.quantity_rule.max != null
                echo 'products.product.quantity.maximum_of' | t: quantity: variant.quantity_rule.max | prepend: ' - '
              endif
              # TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter
              # theme-check-disable
              assign cart_quantity = cart | item_count_for_variant: variant.id
              # theme-check-enable
              if cart_quantity > 0
                echo 'products.product.quantity.in_cart_html' | t: quantity: cart_quantity | prepend: ' - '
              endif
            -%}
          </option>
        {%- endfor -%}
      </select>
      {% render 'icon-caret' %}
    </div>
  </div>
</noscript>
